[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lspeak"
version = "0.1.0"
description = "Unix-first text-to-speech CLI using AI voices with semantic caching"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "nickpending", email = "nickpending@users.noreply.github.com"},
]
keywords = ["tts", "text-to-speech", "cli", "unix", "elevenlabs", "audio", "voice"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "typer>=0.9.0",
    "elevenlabs>=1.0.0",
    "pygame>=2.5.0",
    "sentence-transformers>=5.0.0",
    "faiss-cpu>=1.11.0.post1",
    "onnxruntime>=1.22.1",
]

[project.urls]
Homepage = "https://github.com/nickpending/lspeak"
Repository = "https://github.com/nickpending/lspeak.git"
Issues = "https://github.com/nickpending/lspeak/issues"

[project.scripts]
lspeak = "lspeak.__main__:main"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.9.0",
    "mypy>=1.15.0",
    "types-pyyaml",
]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B", "SIM", "RUF"]
ignore = ["E501"]  # Line too long, handled by formatter

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-xvs"

[tool.coverage.run]
source = ["src/lspeak"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
